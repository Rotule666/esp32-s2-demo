{"ast":null,"code":"import _classCallCheck from\"/home/rotule/esp32-sensor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rotule/esp32-sensor/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/rotule/esp32-sensor/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rotule/esp32-sensor/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import logo from\"./logo.svg\";import\"./App.css\";import LedController from\"./components/ledcontroller\";import TempSensor from\"./components/tempsensor\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={sensor:{id:1,type:\"temperature\",units:\"°C\",value:0.0}};_this.getData=function(){axios.get(\"/API/gettemp\").then(function(response){console.log(response.data);var sensor=_this.state.sensor;sensor.value=response.data.value;_this.setState({sensor:sensor});}).catch(function(e){console.log(e);});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){// Ajax Call\nconsole.log(\"App - componentDidMount\");setInterval(this.getData,2500);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(LedController,{}),/*#__PURE__*/_jsx(TempSensor,{sensor:this.state.sensor}),/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo\",alt:\"logo\"})})]})});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/rotule/esp32-sensor/src/App.js"],"names":["React","Component","LedController","TempSensor","axios","App","props","state","sensor","id","type","units","value","getData","get","then","response","console","log","data","setState","catch","e","setInterval","logo"],"mappings":"gaAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,6BAEA,MAAO,WAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2FAEMC,CAAAA,G,0FAUJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EADiB,MATnBC,KASmB,CATX,CACNC,MAAM,CAAE,CACNC,EAAE,CAAE,CADE,CAENC,IAAI,CAAE,aAFA,CAGNC,KAAK,CAAE,IAHD,CAINC,KAAK,CAAE,GAJD,CADF,CASW,OAWnBC,OAXmB,CAWT,UAAM,CACdT,KAAK,CACFU,GADH,CACO,cADP,EAEGC,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EAEA,GAAMX,CAAAA,MAAM,CAAG,MAAKD,KAAL,CAAWC,MAA1B,CAEAA,MAAM,CAACI,KAAP,CAAeI,QAAQ,CAACG,IAAT,CAAcP,KAA7B,CAEA,MAAKQ,QAAL,CAAc,CAAEZ,MAAM,CAAEA,MAAV,CAAd,EACD,CAVH,EAWGa,KAXH,CAWS,SAACC,CAAD,CAAO,CACZL,OAAO,CAACC,GAAR,CAAYI,CAAZ,EACD,CAbH,EAcD,CA1BkB,cAElB,C,iDAED,4BAAoB,CAClB;AACAL,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAEAK,WAAW,CAAC,KAAKV,OAAN,CAAe,IAAf,CAAX,CACD,C,sBAmBD,iBAAS,CACP,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,aAAD,IADF,cAEE,KAAC,UAAD,EAAY,MAAM,CAAE,KAAKN,KAAL,CAAWC,MAA/B,EAFF,cAGE,eAAQ,SAAS,CAAC,YAAlB,uBACE,YAAK,GAAG,CAAEgB,IAAV,CAAgB,SAAS,CAAC,UAA1B,CAAqC,GAAG,CAAC,MAAzC,EADF,EAHF,GADF,EADF,CAWD,C,iBAlDevB,S,EAqDlB,cAAeI,CAAAA,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LedController from \"./components/ledcontroller\";\nimport TempSensor from \"./components/tempsensor\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    sensor: {\n      id: 1,\n      type: \"temperature\",\n      units: \"°C\",\n      value: 0.0,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    // Ajax Call\n    console.log(\"App - componentDidMount\");\n\n    setInterval(this.getData, 2500);\n  }\n\n  getData = () => {\n    axios\n      .get(\"/API/gettemp\")\n      .then((response) => {\n        console.log(response.data);\n\n        const sensor = this.state.sensor;\n\n        sensor.value = response.data.value;\n\n        this.setState({ sensor: sensor });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <LedController />\n          <TempSensor sensor={this.state.sensor} />\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </header>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}