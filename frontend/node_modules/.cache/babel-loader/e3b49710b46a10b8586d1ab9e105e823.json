{"ast":null,"code":"var _jsxFileName = \"/home/rotule/esp32-sensor/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LedController from \"./components/ledcontroller\";\nimport TempSensor from \"./components/tempsensor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sensor: {\n        id: 1,\n        type: \"temperature\",\n        units: \"°C\",\n        value: 0.0\n      }\n    };\n\n    this.getData = () => {\n      fetch(\"192.168.2.33/API/gettemp\").then(response => {\n        response.json();\n        console.log(response);\n      }).then(value => {\n        console.log(value);\n        const sensor = this.state.sensor;\n        sensor.value = value;\n        this.setState({\n          sensor\n        }); // call getData() again in 5 seconds\n\n        this.intervalID = setTimeout(this.getData.bind(this), 1000);\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Ajax Call\n    console.log(\"App - componentDidMount\");\n    setInterval(this.getData, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(LedController, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TempSensor, {\n          sensor: this.state.sensor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rotule/esp32-sensor/src/App.js"],"names":["React","Component","LedController","TempSensor","App","constructor","props","state","sensor","id","type","units","value","getData","fetch","then","response","json","console","log","setState","intervalID","setTimeout","bind","componentDidMount","setInterval","render","logo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAU1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SATnBC,KASmB,GATX;AACNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAE,CADE;AAENC,QAAAA,IAAI,EAAE,aAFA;AAGNC,QAAAA,KAAK,EAAE,IAHD;AAINC,QAAAA,KAAK,EAAE;AAJD;AADF,KASW;;AAAA,SAWnBC,OAXmB,GAWT,MAAM;AACdC,MAAAA,KAAK,CAAC,0BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClBA,QAAAA,QAAQ,CAACC,IAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,OAJH,EAKGD,IALH,CAKSH,KAAD,IAAW;AACfM,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,cAAMJ,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AAEAA,QAAAA,MAAM,CAACI,KAAP,GAAeA,KAAf;AAEA,aAAKQ,QAAL,CAAc;AAAEZ,UAAAA;AAAF,SAAd,EANe,CAQf;;AACA,aAAKa,UAAL,GAAkBC,UAAU,CAAC,KAAKT,OAAL,CAAaU,IAAb,CAAkB,IAAlB,CAAD,EAA0B,IAA1B,CAA5B;AACD,OAfH;AAgBD,KA5BkB;AAElB;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEAM,IAAAA,WAAW,CAAC,KAAKZ,OAAN,EAAe,IAAf,CAAX;AACD;;AAqBDa,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEmB,IAAV;AAAgB,YAAA,SAAS,EAAC,UAA1B;AAAqC,YAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AApDyB;;AAuD5B,eAAevB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LedController from \"./components/ledcontroller\";\nimport TempSensor from \"./components/tempsensor\";\n\nclass App extends Component {\n  state = {\n    sensor: {\n      id: 1,\n      type: \"temperature\",\n      units: \"°C\",\n      value: 0.0,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    // Ajax Call\n    console.log(\"App - componentDidMount\");\n\n    setInterval(this.getData, 1000);\n  }\n\n  getData = () => {\n    fetch(\"192.168.2.33/API/gettemp\")\n      .then((response) => {\n        response.json();\n        console.log(response);\n      })\n      .then((value) => {\n        console.log(value);\n        const sensor = this.state.sensor;\n\n        sensor.value = value;\n\n        this.setState({ sensor });\n\n        // call getData() again in 5 seconds\n        this.intervalID = setTimeout(this.getData.bind(this), 1000);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <LedController />\n          <TempSensor sensor={this.state.sensor} />\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </header>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}